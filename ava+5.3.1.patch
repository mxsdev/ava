diff --git a/lib/chalk.js b/lib/chalk.js
index eca6d42..adc68aa 100644
--- a/lib/chalk.js
+++ b/lib/chalk.js
@@ -6,10 +6,6 @@ export {chalk};

 let configured = false;
 export function set(options) {
-	if (configured) {
-		throw new Error('Chalk has already been configured');
-	}
-
 	configured = true;
 	chalk = new Chalk(options);
 }
diff --git a/lib/cli.js b/lib/cli.js
index b613666..c4c69c3 100644
--- a/lib/cli.js
+++ b/lib/cli.js
@@ -15,7 +15,7 @@ import validateEnvironmentVariables from './environment-variables.js';
 import normalizeExtensions from './extensions.js';
 import {normalizeGlobs, normalizePattern} from './globs.js';
 import {controlFlow} from './ipc-flow-control.cjs';
-import isCi from './is-ci.js';
+import isCiGlobal from './is-ci.js';
 import {splitPatternAndLineNumbers} from './line-numbers.js';
 import {loadConfig} from './load-config.js';
 import normalizeModuleTypes from './module-types.js';
@@ -98,7 +98,7 @@ const FLAGS = {
 	},
 };

-export default async function loadCli() { // eslint-disable-line complexity
+export default async function loadCli(extraConfig = {}) { // eslint-disable-line complexity
 	let conf;
 	let confError;
 	try {
@@ -221,7 +221,9 @@ export default async function loadCli() { // eslint-disable-line complexity
 		.example('$0 test.js:4,7-9')
 		.help();

-	const combined = {...conf};
+	const combined = {...conf, ...extraConfig};
+
+  const isCi = combined.forceCi != null ? combined.forceCi : isCiGlobal

 	for (const flag of Object.keys(FLAGS)) {
 		if (flag === 'no-worker-threads' && Reflect.has(argv, 'worker-threads')) {
@@ -392,7 +394,7 @@ export default async function loadCli() { // eslint-disable-line complexity

 	let globs;
 	try {
-		globs = normalizeGlobs({files: conf.files, ignoredByWatcher: conf.ignoredByWatcher, extensions, providers});
+		globs = normalizeGlobs({files: combined.files, ignoredByWatcher: conf.ignoredByWatcher, extensions, providers});
 	} catch (error) {
 		exit(error.message);
 	}
@@ -461,6 +463,10 @@ export default async function loadCli() { // eslint-disable-line complexity
 		watching: combined.watch,
 	});

+	if (combined.reporterHook) {
+		combined.reporterHook(reporter)
+	}
+
 	api.on('run', plan => {
 		reporter.startRun(plan);

